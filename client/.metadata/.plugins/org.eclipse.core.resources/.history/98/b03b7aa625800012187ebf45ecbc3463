package whitepaper.smcall;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.HttpResponseException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.BasicResponseHandler;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpParams;

import whitepaper.smcall.alarm.AlarmStr;
import whitepaper.smcall.db.SmcallDB;
import whitepaper.smcall.fragment.JoinFrag;
import whitepaper.smcall.remote.Jax;
import whitepaper.smcall.remote.Mjpage;
import whitepaper.smcall.voicechat.Voicechat;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Typeface;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.Window;
import android.webkit.CookieManager;
import android.webkit.CookieSyncManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class LoginActivity extends FragmentActivity {
		
	private EditText	editText_id;
	private EditText	editText_pw;
	private Button		joinbtn;
	private Button		btn_login;
	
	private SmcallDB 	scDB;
	private Cursor		cs;	
	private Jax			jax;
	
	public	Typeface	face;
	
	public HttpClient httpclient =  new DefaultHttpClient();  //멤버변수로 선언
	public CookieManager cookieManager;
	public String domain = Mjpage.MJ;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		
		super.onCreate(savedInstanceState);		
		setContentView(R.layout.login_activity);
		
		face = Typeface.createFromAsset(getAssets(), "font/08SEOULNAMSANL.TTF");
		
		view_init();
		init();		
		
		
		CookieSyncManager.createInstance(this);
        cookieManager = CookieManager.getInstance();
        
        setSyncCookie();
        CookieSyncManager.getInstance().startSync();
        
	}
	
	public void setSyncCookie() {
        Log.e("surosuro", "token transfer start ---------------------------");
        try {
            List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(2);
            nameValuePairs.add(new BasicNameValuePair("token", "TEST"));// 넘길 파라메터 값셋팅token=TEST
                
            HttpParams params = new BasicHttpParams();
            
            HttpPost post = new HttpPost("domain+/androidToken.jsp");
            post.setParams(params);
            HttpResponse response = null;
            BasicResponseHandler myHandler = new BasicResponseHandler();
            String endResult = null;

            try {
                post.setEntity(new UrlEncodedFormEntity(nameValuePairs));
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }

            try {
                response = httpclient.execute(post);
            } catch (ClientProtocolException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }

            try {
                endResult = myHandler.handleResponse(response);
            } catch (HttpResponseException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }

            List<Cookie> cookies = ((DefaultHttpClient)httpclient).getCookieStore().getCookies();
            
            if (!cookies.isEmpty()) {
                for (int i = 0; i < cookies.size(); i++) {
                    // cookie = cookies.get(i);
                    String cookieString = cookies.get(i).getName() + "="
                            + cookies.get(i).getValue();
                    Log.e("surosuro", cookieString);
                    cookieManager.setCookie(domain, cookieString);
                }
            }
            Thread.sleep(500);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
	
	private void view_init(){
		editText_id	= (EditText)findViewById(R.id.etId);
		editText_id.setTypeface(face);
		editText_pw	= (EditText)findViewById(R.id.etPw);
		editText_pw.setTypeface(face);
		btn_login	= (Button)findViewById(R.id.btnLg);
			btn_login.setOnClickListener(onClickListener);
			btn_login.setTypeface(face);
			
		joinbtn		= (Button) findViewById(R.id.joinbtn);
		joinbtn		.setTypeface(face);
		joinbtn		.setOnClickListener(onClickListener);
	}
	
	private void init(){
		scDB	= new SmcallDB(LoginActivity.this);
		scDB	.open();
		
		jax		= new Jax();
	}
	
	public View.OnClickListener onClickListener = new View.OnClickListener() {
		
		FragmentManager fm = getSupportFragmentManager();
		DialogFragment newFragment;
		
		@SuppressWarnings("deprecation")
		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch (v.getId()) {
			case R.id.btnLg:
				/*
				Intent i1 = new Intent(LoginActivity.this, MorningCallActivity.class);
				startActivity(i1);*/
				
				// 입력에 대한 예외처리
				if((editText_id.getText().length() == 0 && editText_pw.getText().length() == 0)){
					Toast.makeText(getApplicationContext(), "아이디와 비밀번호를 입력해주세요.", Toast.LENGTH_SHORT).show();
					break;
				}else if(editText_id.getText().length() == 0){
					Toast.makeText(getApplicationContext(), "아이디를 입력해주세요.", Toast.LENGTH_SHORT).show();
					break;
				}else if(editText_pw.getText().length() == 0){
					Toast.makeText(getApplicationContext(), "비밀번호를 입력해주세요.", Toast.LENGTH_SHORT).show();
					break;
				}
				
				String id = editText_id.getText().toString(); AlarmStr.id = id;
				String pw = editText_pw.getText().toString();
				
				String[]	values 	= {"id", id, "pw", pw};
				String		ret 	= jax.sendJson(Mjpage.login, values);
				
				if(Boolean.valueOf(jax.getValue(ret, "result"))){
					//Toast.makeText(getApplicationContext(), ret, Toast.LENGTH_SHORT).show();			
					
					scDB.initAccount();
					scDB.insertAccount(id, pw);
					AlarmStr.id = id;
					
					Intent i = new Intent(LoginActivity.this, MorningCallActivity.class);
					startActivity(i);					
				}else{
					Toast.makeText(getApplicationContext(), "아이디 또는 비밀번호를 확인해주세요.", Toast.LENGTH_SHORT).show();
				}
				
				
				break;
				
			case R.id.joinbtn:
							
				newFragment = new JoinFrag();
				newFragment.show(fm, "join");
				
				break;
				
			default:
				break;
			}
		}
	};
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		//getMenuInflater().inflate(R.menu.activity_main, menu);
		// 옵션메뉴 없음
		return true;
	}
	
	private boolean end = false;
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		//super.onBackPressed();
		if(!end){
			end = true;
			Toast.makeText(getApplicationContext(), "뒤로 버튼을 한번 더 누르면 종료됩니다.", Toast.LENGTH_SHORT).show();
			
			Thread thread = new Thread(new Runnable() {
				
				@Override
				public void run() {
					// TODO Auto-generated method stub
					try {
						Thread.sleep(2000);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					end = false;
					
				}
			});
			thread.start();
		}else{			
			Intent launchHome = new Intent(Intent.ACTION_MAIN);
			launchHome.addCategory(Intent.CATEGORY_DEFAULT);
			launchHome.addCategory(Intent.CATEGORY_HOME);
			startActivity(launchHome);				
		}
	}
	
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		scDB.close();
	}

}
