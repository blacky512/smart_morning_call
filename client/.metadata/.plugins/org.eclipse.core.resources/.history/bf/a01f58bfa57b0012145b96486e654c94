package whitepaper.smcall;

import whitepaper.smcall.db.SmcallDB;
import whitepaper.smcall.remote.Jax;
import whitepaper.smcall.remote.Mjpage;
import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.Window;
import android.widget.Toast;

public class MainActivity extends Activity {
	public final String TAG = "MAIN";

	public Jax jax;

	public String id;
	public String pw;

	private Handler h;
	private SmcallDB scDB;
	private Cursor cs;

	private Class<?> nextActivity;
	
	//Load Dialog
	private ProgressDialog		progressDialog	=	null;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main_activity);
	

		jax = new Jax();
	}

	protected void onResume() {
		super.onResume();
		// //////////////오프닝 액티비티 만들어서 처리하도록///////////////////////
		// DB
		scDB = new SmcallDB(MainActivity.this);
		scDB.open();
		cs = scDB.getAccount();
		cs.moveToFirst();

		if (cs.getCount() == 1) { // 저장된 아이디 있음
			// 저장된 아이디로 로그인 후 알람 액티비티로 이동
			Log.i(TAG, cs.toString());

			Log.i(TAG, id = cs.getString(0));

			Log.i(TAG, pw = cs.getString(1));

			Log.i("DB", id + " : " + pw + " 저장된 계정");

			Thread loginThread = new Thread(new Runnable() {
				
				@Override
				public void run() {
					// TODO Auto-generated method stub
					String[] values = { "id", id, "pw", pw };
					String ret = jax.sendJson(Mjpage.login, values);
					

					if (Boolean.valueOf(jax.getValue(ret, "result"))) {
						Log.i(TAG, "로그인성공");

						nextActivity = MorningCallActivity.class;
						
						Message retmsg = Message.obtain(mainHandler, 0);			
						mainHandler.sendMessage(retmsg);
					} else { // 로그인 실패
						Log.i(TAG, "로그인 실패");
						Toast.makeText(getApplicationContext(), "로그인 실패",
								Toast.LENGTH_SHORT);

						nextActivity = LoginActivity.class;
						
						Message retmsg = Message.obtain(mainHandler, 1);			
						mainHandler.sendMessage(retmsg);
					}
				}
			});
			
			loginThread.start();
			showDialog(0);
			

		} else {
			Toast.makeText(getApplicationContext(), "계정없음", Toast.LENGTH_SHORT)
					.show();
			nextActivity = LoginActivity.class;
		}
		
		h = new Handler();
		h.postDelayed(irun, 1500);
	};

	Runnable irun = new Runnable() {

		@Override
		public void run() {
			// TODO Auto-generated method stub
				

			Intent i = new Intent(MainActivity.this, nextActivity);
			startActivity(i);

			overridePendingTransition(android.R.anim.fade_in,
					android.R.anim.fade_out);
			finish();

		}
	};

	@Override
	public void onBackPressed() {

	};
	
	protected Dialog onCreateDialog(int id){
		switch(id){
		case 0 :
			progressDialog = new ProgressDialog(MainActivity.this);
			progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
			progressDialog.setMessage("Connecting to Server");
			progressDialog.setCancelable(false);
			return progressDialog;
		default:
			return null;
		}
	}
	
	public Handler mainHandler	= new Handler(){
    	public void handleMessage(android.os.Message msg){
    		switch (msg.what){
    		
    		case 0:
    			dismissDialog(0);
    			Toast.makeText(getApplicationContext(), "로그인성공", Toast.LENGTH_SHORT).show();
    			break;
    		case 1:
    			dismissDialog(0);
    			Toast.makeText(getApplicationContext(), "로그인실패", Toast.LENGTH_SHORT).show();
    			break;
    		default :
    			break;
    		
    		}
    	}    	
    };

}
